{
    "version": "https://jsonfeed.org/version/1",
    "title": "只想摆烂，阿巴阿巴阿巴",
    "subtitle": "",
    "icon": "https://zhiyuan-porg.github.io/assets/favicon.ico",
    "description": "",
    "home_page_url": "https://zhiyuan-porg.github.io",
    "items": [
        {
            "id": "https://zhiyuan-porg.github.io/2024/07/17/Response%20And%20ServletContext/",
            "url": "https://zhiyuan-porg.github.io/2024/07/17/Response%20And%20ServletContext/",
            "title": "Response And ServletContext",
            "date_published": "2024-07-17T09:49:03.578Z",
            "content_html": "<h1 id=\"response-and-servletcontext\"><a class=\"anchor\" href=\"#response-and-servletcontext\">#</a> Response And ServletContext</h1>\n<h3 id=\"1http响应概述\"><a class=\"anchor\" href=\"#1http响应概述\">#</a> 1.Http 响应概述</h3>\n<h5 id=\"11http响应信息的组成\"><a class=\"anchor\" href=\"#11http响应信息的组成\">#</a> 1.1HTTP 响应信息的组成</h5>\n<p>响应行、响应头、响应体</p>\n<p><strong>1.2.1 响应行</strong></p>\n<p>由协议及版本、响应状态码、状态信息</p>\n<blockquote>\n<p>e.g. HTTP/1.1    200    ok</p>\n</blockquote>\n<p>其中，响应状态码又分为五类：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">状态码</th>\n<th style=\"text-align:center\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1xx</td>\n<td style=\"text-align:center\">指示信息；表示请求已接收，继续处理</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2xx</td>\n<td style=\"text-align:center\">成功；</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3xx</td>\n<td style=\"text-align:center\">重定向</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4xx</td>\n<td style=\"text-align:center\">客户端错误；语法错误 or 无法实现</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5xx</td>\n<td style=\"text-align:center\">服务端错误</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>tips: 常见的状态码</strong></p>\n<p>200：正确得到响应数据</p>\n<p>302：页面重定向</p>\n<p>304：使用了本地缓存</p>\n<p>400：请求参数错误</p>\n<p>404：资源不存在</p>\n<p>405：请求的方法错误</p>\n<p>415： 无法处理的媒体格式</p>\n<p>500： 服务器内部错误</p>\n</blockquote>\n<p><strong>1.2.2 响应头</strong></p>\n<p>由各种键值组成，键固定值可变。常见的响应头如下：</p>\n<table>\n<thead>\n<tr>\n<th>响应头信息</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Location</td>\n<td>重定向要跳转的地址</td>\n</tr>\n<tr>\n<td>Content-Type</td>\n<td>设置数据类型及字符集</td>\n</tr>\n<tr>\n<td>Refresh</td>\n<td>设置稍后跳转的延迟时间及页面路径</td>\n</tr>\n<tr>\n<td>Content-Disposition</td>\n<td>设置内容的处理方式</td>\n</tr>\n</tbody>\n</table>\n<p><strong>1.2.3 响应体</strong></p>\n<p>封装服务器要返回的数据，而且可以是任意数据</p>\n<blockquote>\n<p><strong>tips:</strong> Get 请求虽然没有请求体，但它有响应体嘞</p>\n</blockquote>\n<h3 id=\"httpservletresponse对象\"><a class=\"anchor\" href=\"#httpservletresponse对象\">#</a> HttpServletResponse 对象</h3>\n",
            "tags": []
        },
        {
            "id": "https://zhiyuan-porg.github.io/2024/07/17/Http%E5%8D%8F%E8%AE%AE%E4%B8%8ERequest/",
            "url": "https://zhiyuan-porg.github.io/2024/07/17/Http%E5%8D%8F%E8%AE%AE%E4%B8%8ERequest/",
            "title": "Http协议与Request",
            "date_published": "2024-07-17T02:13:03.187Z",
            "content_html": "<h1 id=\"http协议与request\"><a class=\"anchor\" href=\"#http协议与request\">#</a> Http 协议与 Request</h1>\n<h3 id=\"http概述\"><a class=\"anchor\" href=\"#http概述\">#</a> Http 概述</h3>\n<h5 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h5>\n<p>HTTP（Hyper　Text　Transｆｅｒ　Ｐｒｏｔｏｃｏｌ超文本传输协议） 应用层协议，运行在ＴＣＰ传输层协议之上，作用是指定传输格式，且通信双方都要遵守。</p>\n<blockquote>\n<p>Tip：HTTP 协议的默认端口是８０哦</p>\n</blockquote>\n<h5 id=\"特点\"><a class=\"anchor\" href=\"#特点\">#</a> 特点</h5>\n<p>由请求报文和响应报文组成；无状态协议，不记录用户访问状态。</p>\n<h5 id=\"组成\"><a class=\"anchor\" href=\"#组成\">#</a> 组成</h5>\n<p>请求行、请求头、请求体</p>\n<p><strong>请求行：</strong>      包括请求的方式（GET、POST、PUT、DELETE 等）、地址（URL）以及协议的版本</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">POST 方式</th>\n<th style=\"text-align:center\">GET 方式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">地址栏</td>\n<td style=\"text-align:center\">参数不会在地址栏显示出来</td>\n<td style=\"text-align:center\">参数会拼接在请求的 URL 后面，以查询字符方式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">大小</td>\n<td style=\"text-align:center\">理论上无大小限制，使用流的方式发送数据</td>\n<td style=\"text-align:center\">受浏览器限制，通常是１K</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">安全性</td>\n<td style=\"text-align:center\">在请求体中发送，参数不外显，安全性相对来说较高</td>\n<td style=\"text-align:center\">在请求行中发送，参数外显，安全性较低</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">缓存</td>\n<td style=\"text-align:center\">不使用缓存</td>\n<td style=\"text-align:center\">可能会使用缓存访问静态资源，使用时状态码是３０４</td>\n</tr>\n</tbody>\n</table>\n<p><strong>请求头：</strong></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n",
            "tags": []
        },
        {
            "id": "https://zhiyuan-porg.github.io/2024/07/16/hello-world/",
            "url": "https://zhiyuan-porg.github.io/2024/07/16/hello-world/",
            "title": "Hello World",
            "date_published": "2024-07-15T16:03:55.730Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}