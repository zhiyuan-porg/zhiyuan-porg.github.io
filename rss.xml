<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>只想摆烂，阿巴阿巴阿巴</title>
        <subtitle></subtitle>
        <icon>https://zhiyuan-porg.github.io/assets/favicon.ico</icon>
        <link>https://zhiyuan-porg.github.io</link>
        <author>
          <name>SanYue</name>
        </author>
        <description></description>
        <language>zh-cn</language>
        <pubDate>Wed, 17 Jul 2024 17:49:03 +0800</pubDate>
        <lastBuildDate>Wed, 17 Jul 2024 17:49:03 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://zhiyuan-porg.github.io/2024/07/17/Response%20And%20ServletContext/</guid>
            <title>Response And ServletContext</title>
            <link>https://zhiyuan-porg.github.io/2024/07/17/Response%20And%20ServletContext/</link>
            <pubDate>Wed, 17 Jul 2024 17:49:03 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;1http响应概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1http响应概述&#34;&gt;#&lt;/a&gt; 1.Http 响应概述&lt;/h2&gt;
&lt;h3 id=&#34;11http响应信息的组成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11http响应信息的组成&#34;&gt;#&lt;/a&gt; 1.1HTTP 响应信息的组成&lt;/h3&gt;
&lt;p&gt;响应行、响应头、响应体&lt;/p&gt;
&lt;h3 id=&#34;12响应行&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12响应行&#34;&gt;#&lt;/a&gt; 1.2 响应行&lt;/h3&gt;
&lt;p&gt;由协议及版本、响应状态码、状态信息&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g. HTTP/1.1    200    ok&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;121响应状态码分为五类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#121响应状态码分为五类&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1.2.1 响应状态码分为五类&lt;/strong&gt;&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;状态码&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1xx&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;指示信息；表示请求已接收，继续处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2xx&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;成功；&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3xx&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;重定向&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4xx&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;客户端错误；语法错误 or 无法实现&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5xx&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;服务端错误&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;122响应头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#122响应头&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1.2.2 响应头&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;由各种键值组成，键固定值可变。常见的响应头如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;响应头信息&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Location&lt;/td&gt;
&lt;td&gt;重定向要跳转的地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-Type&lt;/td&gt;
&lt;td&gt;设置数据类型及字符集&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Refresh&lt;/td&gt;
&lt;td&gt;设置稍后跳转的延迟时间及页面路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content-Disposition&lt;/td&gt;
&lt;td&gt;设置内容的处理方式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;常见的状态码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;200：正确得到响应数据&lt;/p&gt;
&lt;p&gt;302：页面重定向&lt;/p&gt;
&lt;p&gt;304：使用了本地缓存&lt;/p&gt;
&lt;p&gt;400：请求参数错误&lt;/p&gt;
&lt;p&gt;404：资源不存在&lt;/p&gt;
&lt;p&gt;405：请求的方法错误&lt;/p&gt;
&lt;p&gt;415： 无法处理的媒体格式&lt;/p&gt;
&lt;p&gt;500： 服务器内部错误&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;123-响应体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#123-响应体&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1.2.3 响应体&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;封装服务器要返回的数据，而且可以是任意数据&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Get 请求虽然没有请求体，但它有响应体&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;2httpservletrequest对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2httpservletrequest对象&#34;&gt;#&lt;/a&gt; 2.HttpServletRequest 对象&lt;/h2&gt;
&lt;h3 id=&#34;21简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21简介&#34;&gt;#&lt;/a&gt; 2.1 简介&lt;/h3&gt;
&lt;p&gt;​	HttpServletReruest 是 ServletRequest 接口的子接口，代表着一个请求对象，用来封装所有从浏览器发送给服务器的数据&lt;/p&gt;
&lt;h3 id=&#34;22请求行相关的api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22请求行相关的api&#34;&gt;#&lt;/a&gt; 2.2 请求行相关的 API&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getMethod&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getRequestURI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;StringBuffer&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getRequestURL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getProtocol&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 得到请求行中协议的版本&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getContextPath&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 得到项目的访问地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getRemoteAddr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 得到客户端的 IP 地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getServletPath&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 得到 servlet 的访问地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;23请求头相关的api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23请求头相关的api&#34;&gt;#&lt;/a&gt; 2.3 请求头相关的 API&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getHeader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; headName&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 通过键取值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Enumeration&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getHeaderNames&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 请求头中键名字&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;hasMoreElements&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 是否还有下一个元素&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;E&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;nextElement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 得到某个元素，并且指针后移一位&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;hasMoreElements () 可以与 nextElement () 搭配使用，例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;Enumeration&amp;lt;String&amp;gt; headerNames = request.getHeaderNames();&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;// 此时对 headerNames 进行遍历，&lt;br /&gt;
String name;&lt;br /&gt;
String value;&lt;br /&gt;
while(headerNames.hasMoreElements()){&lt;br /&gt;
// 获取到请求头中的所有键值对&lt;br /&gt;
 // 指针直接指向下一行，可以理解为指针在初始时指向的是 - 1，判断下一位不为空时才指针才会下移取值&lt;br /&gt;
 name = headerNames.nextElements ();&lt;br /&gt;
value = request.getHeader(name);&lt;br /&gt;
}&lt;br /&gt;
```&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;24请求参数的相关api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#24请求参数的相关api&#34;&gt;#&lt;/a&gt; 2.4 请求参数的相关 API&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getParameter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 通过参数名称取值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getParameterValues&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 得到所有同名参数值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Enumeration&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getParameterNames&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 得到所有参数的键名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getParameterMap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 得到所有参数的键值对&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;3请求相关的方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3请求相关的方法&#34;&gt;#&lt;/a&gt; 3. 请求相关的方法&lt;/h2&gt;
&lt;h3 id=&#34;31作用域的介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31作用域的介绍&#34;&gt;#&lt;/a&gt; 3.1 作用域的介绍&lt;/h3&gt;
&lt;p&gt;​	作用域是不同的 Servlet 之间的数据共享区，存放于数据库的内存中。&lt;/p&gt;
&lt;p&gt;​	主要分为四个：页面域（Page）、请求域（Request）、会话域（Session）、上下文域（ServletContext）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数据只能在同一个请求中共享，请求结束或其它的请求不能访问其中的数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;32相关的api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32相关的api&#34;&gt;#&lt;/a&gt; 3.2 相关的 API&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;setAttribute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;key&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getAttribute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;key&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;removeAttribute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;key&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;33请求分发的api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33请求分发的api&#34;&gt;#&lt;/a&gt; 3.3 请求分发的 API&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 将请求跳转到分发器指定的地方&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;forward&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ServletRequest&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ServletResponse&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Response&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 收集分发器指定的请求的响应结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ServletRequest&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ServletResponse&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Response&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;4转发-and-重定向&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4转发-and-重定向&#34;&gt;#&lt;/a&gt; 4. 转发 And 重定向&lt;/h2&gt;
&lt;h3 id=&#34;41转发&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#41转发&#34;&gt;#&lt;/a&gt; 4.1 转发&lt;/h3&gt;
&lt;p&gt;​	由&lt;strong&gt;服务器&lt;/strong&gt;进行的页面跳转&lt;/p&gt;
&lt;h4 id=&#34;411相关的api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#411相关的api&#34;&gt;#&lt;/a&gt; &lt;strong&gt;4.1.1 相关的 API&lt;/strong&gt;&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getRequestDispatcher&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;URI&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;412特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#412特点&#34;&gt;#&lt;/a&gt; &lt;strong&gt;4.1.2 特点&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;服务器的内部行为，URL 始终不变&lt;/li&gt;
&lt;li&gt;客户端只发送了一次请求&lt;/li&gt;
&lt;li&gt;请求域的数据不会失效&lt;/li&gt;
&lt;li&gt;URI 不需要添上项目名&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;42重定向&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#42重定向&#34;&gt;#&lt;/a&gt; 4.2 重定向&lt;/h3&gt;
&lt;p&gt;​	&lt;strong&gt;客户端&lt;/strong&gt;根据服务器反馈的信息&lt;strong&gt;再次请求&lt;/strong&gt;服务器&lt;/p&gt;
&lt;h4 id=&#34;421相关的api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#421相关的api&#34;&gt;#&lt;/a&gt; &lt;strong&gt;4.2.1 相关的 API&lt;/strong&gt;&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendRedirect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;URL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;422特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#422特点&#34;&gt;#&lt;/a&gt; &lt;strong&gt;4.2.2 特点&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;由于是再次请求，所以地址栏会发生变化&lt;/li&gt;
&lt;li&gt;客户端两次请求了数据&lt;/li&gt;
&lt;li&gt;请求域中数据丢失&lt;/li&gt;
&lt;li&gt;URL 是完整的项目名，当然也可以是外部链接&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;[!TIP]&lt;/p&gt;
&lt;p&gt;如果不想丢失数据域中的信息的话，可以用转发哦&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zhiyuan-porg.github.io/2024/07/17/Http%E5%8D%8F%E8%AE%AE%E4%B8%8ERequest/</guid>
            <title>Http协议与Request</title>
            <link>https://zhiyuan-porg.github.io/2024/07/17/Http%E5%8D%8F%E8%AE%AE%E4%B8%8ERequest/</link>
            <pubDate>Wed, 17 Jul 2024 10:13:03 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;http协议与request&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#http协议与request&#34;&gt;#&lt;/a&gt; Http 协议与 Request&lt;/h1&gt;
&lt;h3 id=&#34;http概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#http概述&#34;&gt;#&lt;/a&gt; Http 概述&lt;/h3&gt;
&lt;h5 id=&#34;概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h5&gt;
&lt;p&gt;HTTP（Hyper　Text　Transｆｅｒ　Ｐｒｏｔｏｃｏｌ超文本传输协议） 应用层协议，运行在ＴＣＰ传输层协议之上，作用是指定传输格式，且通信双方都要遵守。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tip：HTTP 协议的默认端口是８０哦&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特点&#34;&gt;#&lt;/a&gt; 特点&lt;/h5&gt;
&lt;p&gt;由请求报文和响应报文组成；无状态协议，不记录用户访问状态。&lt;/p&gt;
&lt;h5 id=&#34;组成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组成&#34;&gt;#&lt;/a&gt; 组成&lt;/h5&gt;
&lt;p&gt;请求行、请求头、请求体&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;请求行：&lt;/strong&gt;      包括请求的方式（GET、POST、PUT、DELETE 等）、地址（URL）以及协议的版本&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;POST 方式&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;GET 方式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;地址栏&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;参数不会在地址栏显示出来&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;参数会拼接在请求的 URL 后面，以查询字符方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;大小&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;理论上无大小限制，使用流的方式发送数据&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;受浏览器限制，通常是１K&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;安全性&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;在请求体中发送，参数不外显，安全性相对来说较高&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;在请求行中发送，参数外显，安全性较低&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;缓存&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;不使用缓存&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;可能会使用缓存访问静态资源，使用时状态码是３０４&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;请求头：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://zhiyuan-porg.github.io/2024/07/16/hello-world/</guid>
            <title>Hello World</title>
            <link>https://zhiyuan-porg.github.io/2024/07/16/hello-world/</link>
            <pubDate>Tue, 16 Jul 2024 00:03:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Welcome to &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&#34;https://hexo.io/docs/&#34;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&#34;https://hexo.io/docs/troubleshooting.html&#34;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&#34;https://github.com/hexojs/hexo/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo new &lt;span class=&#34;token string&#34;&gt;&#34;My New Post&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/writing.html&#34;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo server&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/server.html&#34;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo generate&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/generating.html&#34;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo deploy&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/one-command-deployment.html&#34;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
